package com.thenakliman.tries;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.util.function.Consumer;

public class Try {
  public interface IProcedure {
    void call();
  }

  public static CodeBlock toCall(IProcedure procedure) {
    return new CodeBlock(procedure);
  }

  static class CodeBlock {
    final private IProcedure procedure;

    private CodeBlock(IProcedure procedure) {
      this.procedure = procedure;
    }

    CodeWithRuntimeException acceptRuntimeException(Class<? extends RuntimeException> exceptionClass) {
      return new CodeWithRuntimeException(procedure, exceptionClass);
    }

    public static class CodeWithRuntimeException {
      final private IProcedure procedure;
      final private Class<? extends RuntimeException> exceptionClass;

      public CodeWithRuntimeException(IProcedure procedure, Class<? extends RuntimeException> exceptionClass) {
        this.procedure = procedure;
        this.exceptionClass = exceptionClass;
      }

      public ExceptionHandler thenCall(Consumer<RuntimeException> exceptionConsumer) {
        return new ExceptionHandler(this.procedure, exceptionClass, exceptionConsumer);
      }
    }

    public static class ExceptionHandler {
      final private IProcedure procedure;
      final private Class<? extends Throwable> exceptionClass;
      final private Consumer<RuntimeException> consumer;

      public ExceptionHandler(IProcedure procedure,
                              Class<? extends RuntimeException> exceptionClass,
                              Consumer<RuntimeException> exceptionConsumer) {

        this.procedure = procedure;
        this.exceptionClass = exceptionClass;
        this.consumer = exceptionConsumer;
      }

      public void done() {
        try {
          procedure.call();
        } catch (RuntimeException exception) {
          if (exceptionClass.isInstance(exception)) {
            consumer.accept(exception);
          } else {
            throw exception;
          }
        }
      }
    }
  }
}
